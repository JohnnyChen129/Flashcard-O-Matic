{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sainw\\\\OneDrive\\\\Desktop\\\\completed Project march card o matic\\\\src\\\\Deck\\\\DeckForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { createDeck, readDeck, updateDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckForm(_ref) {\n  _s();\n\n  let {\n    mode\n  } = _ref;\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  const initialFormData = {\n    name: \"\",\n    description: \"\"\n  };\n  const [formData, setFormData] = useState({ ...initialFormData\n  });\n\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    return setFormData({ ...formData,\n      [target.name]: target.value\n    });\n  };\n\n  useEffect(() => {\n    const abortCon = new AbortController();\n\n    async function getEditDeck() {\n      try {\n        const deckToEdit = await readDeck(deckId, abortCon.signal);\n        setFormData({ ...deckToEdit\n        });\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    if (mode === \"edit\") {\n      getEditDeck();\n    }\n\n    return () => abortCon.abort();\n  }, [deckId, mode]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const abortCon = new AbortController();\n\n    async function createNewDeck() {\n      try {\n        const newDeck = await createDeck(formData, abortCon.signal);\n        setFormData({ ...initialFormData\n        });\n        history.push(`/decks/${newDeck.id}`);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    async function editDeck() {\n      try {\n        await updateDeck(formData, abortCon.signal);\n        history.push(`/decks/${deckId}`);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    mode === \"create\" ? createNewDeck() : editDeck();\n    return () => abortCon.abort();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"col-12\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          placeholder: \"Deck Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"description\",\n          name: \"description\",\n          value: formData.description,\n          onChange: handleChange,\n          placeholder: \"Brief description of the deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: mode === \"create\" ? \"/\" : `/decks/${deckId}`,\n          className: \"btn btn-secondary mr-2\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeckForm, \"pwZcKqi8KRLt5gr3/2oHkJMHmRE=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = DeckForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckForm\");","map":{"version":3,"sources":["C:/Users/sainw/OneDrive/Desktop/completed Project march card o matic/src/Deck/DeckForm.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","createDeck","readDeck","updateDeck","DeckForm","mode","history","deckId","initialFormData","name","description","formData","setFormData","handleChange","target","value","abortCon","AbortController","getEditDeck","deckToEdit","signal","err","abort","handleSubmit","event","preventDefault","createNewDeck","newDeck","push","id","editDeck"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { createDeck, readDeck, updateDeck } from \"../utils/api\";\r\n\r\nexport default function DeckForm({ mode }) {\r\n  const history = useHistory();\r\n  const { deckId } = useParams();\r\n\r\n  const initialFormData = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n  const [formData, setFormData] = useState({ ...initialFormData });\r\n\r\n  const handleChange = ({ target }) =>\r\n    setFormData({ ...formData, [target.name]: target.value });\r\n\r\n  useEffect(() => {\r\n    const abortCon = new AbortController();\r\n\r\n    async function getEditDeck() {\r\n      try {\r\n        const deckToEdit = await readDeck(deckId, abortCon.signal);\r\n        setFormData({ ...deckToEdit });\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    }\r\n    if (mode === \"edit\") {\r\n      getEditDeck();\r\n    }\r\n    return () => abortCon.abort();\r\n  }, [deckId, mode]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const abortCon = new AbortController();\r\n    async function createNewDeck() {\r\n      try {\r\n        const newDeck = await createDeck(formData, abortCon.signal);\r\n        setFormData({ ...initialFormData });\r\n        history.push(`/decks/${newDeck.id}`);\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    }\r\n    async function editDeck() {\r\n      try {\r\n        await updateDeck(formData, abortCon.signal);\r\n        history.push(`/decks/${deckId}`);\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    }\r\n    mode === \"create\" ? createNewDeck() : editDeck();\r\n    return () => abortCon.abort();\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column\">\r\n      <form className=\"col-12\" onSubmit={handleSubmit}>\r\n        <div className=\"row form-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            placeholder=\"Deck Name\"\r\n          />\r\n        </div>\r\n        <div className=\"row form-group\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            placeholder=\"Brief description of the deck\"\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <Link\r\n            to={mode === \"create\" ? \"/\" : `/decks/${deckId}`}\r\n            className=\"btn btn-secondary mr-2\"\r\n          >\r\n            Cancel\r\n          </Link>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}